# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "ahci" "nvme" "usbhid" "uas" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];

  boot.extraModulePackages = [ config.boot.kernelPackages.zfs ];
  boot.zfs.extraPools = [ "zpool" ];

  fileSystems."/" = {
    device = "zpool/root";
    options = [ "zfsutil" ];
    fsType = "zfs";
  };

  fileSystems."/nix" = {
    device = "zpool/nix";
    options = [ "zfsutil" ];
    fsType = "zfs";
  };

  fileSystems."/var" = {
    device = "zpool/var";
    options = [ "zfsutil" ];
    fsType = "zfs";
  };

  fileSystems."/home" = {
    device = "zpool/home";
    options = [ "zfsutil" ];
    fsType = "zfs";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F9C6-C051";
    fsType = "vfat";
    options = [ "fmask=0137" "dmask=0027" ];
  };

  fileSystems."/mnt/nvme" = {
    device = "/dev/disk/by-uuid/A06EA0F16EA0C200";
    fsType = "ntfs";
  };

  fileSystems."/mnt/hdd" = {
    device = "/dev/disk/by-uuid/FAD2A7C8817FE10C";
    fsType = "ntfs";
  };

  fileSystems."/mnt/datausb" = {
    device = "/dev/disk/by-uuid/6530384350313EF8";
    fsType = "ntfs";
  };

  swapDevices = [{
    device = "/dev/disk/by-partuuid/ae1b23ba-3183-460e-b053-e733965ae328";
    randomEncryption = true;
  }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
